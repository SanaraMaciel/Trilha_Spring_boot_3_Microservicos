spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/alura_food?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=T@njiro192168

spring.jpa.show-sql=true

spring.flyway.enabled=false

#Dependencias do Eureka para usar a aplicacao como client-side
#Sendo o ms de microsservico e a URL o caminho padrao que colocamos no servico do proprio Eureka.
spring.application.name=pagamentos-ms
eureka.client.serviceUrl.defaultZone=http://localhost:8081/eureka

#deixar que o Eureka controle em qual porta que ele vai subir o servico:
server.port=0


#propriedades do circuit breaker
#slidingWindowSize : indica com quantas requisições que faremos uma estatística, para saber se ele pode passar para o estado aberto ou para o fechado.
#minimumNumberOfCalls: indica qual o número mínimo de chamadas que temos que fazer até o circuit breaker entrar em ação.
#waitDurationInOpenState: é o tempo que vai ser mantido no estado de aberto, configuramos por 50 segundos.
resilience4j.circuitbreaker.instances.atualizaPedido.slidingWindowSize: 3
resilience4j.circuitbreaker.instances.atualizaPedido.minimumNumberOfCalls: 2
resilience4j.circuitbreaker.instances.atualizaPedido.waitDurationInOpenState: 50s


#Configuracoes do rabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
